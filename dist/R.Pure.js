"use strict";

require("6to5/polyfill");
var Promise = require("bluebird");
module.exports = function (R) {
  var _ = require("lodash");

  var shouldComponentUpdate = function shouldComponentUpdate(props, state) {
    return !(_.isEqual(this.props, props) && _.isEqual(this.state, state));
  };

  /**
   * @memberof R
   * @type {Object}
   * @public
   */
  var Pure = /** @lends Pure */{
    /**
     * Implements React shouldComponentUpdate for pure components,
     * ie. update iff props or state has changed.
     * @type {Function}
     * @public
     */
    shouldComponentUpdate: shouldComponentUpdate,
    /**
     * Mixin for Pure components implementing the pure shouldComponentUpdate.
     * @type {Object}
     * @public
     */
    Mixin: {
      _PureMixinIsPure: true,
      shouldComponentUpdate: shouldComponentUpdate } };

  return Pure;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImQ6L3dvcmtzcGFjZV9yZWZhY3Rvci9yZWFjdC1yYWlscy9zcmMvUi5QdXJlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0FBQ3pCLElBQU0sT0FBTyxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUNwQyxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQVMsQ0FBQyxFQUFFO0FBQ3pCLE1BQUksQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQzs7QUFFMUIsTUFBSSxxQkFBcUIsR0FBRyxTQUFTLHFCQUFxQixDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUU7QUFDckUsV0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0dBQzFFLENBQUM7Ozs7Ozs7QUFPRixNQUFJLElBQUkscUJBQXFCOzs7Ozs7O0FBT3pCLHlCQUFxQixFQUFFLHFCQUFxQjs7Ozs7O0FBTTVDLFNBQUssRUFBRTtBQUNILHNCQUFnQixFQUFFLElBQUk7QUFDdEIsMkJBQXFCLEVBQUUscUJBQXFCLEVBQy9DLEVBQ0osQ0FBQzs7QUFFRixTQUFPLElBQUksQ0FBQyIsImZpbGUiOiJSLlB1cmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCc2dG81L3BvbHlmaWxsJyk7XG5jb25zdCBQcm9taXNlID0gcmVxdWlyZSgnYmx1ZWJpcmQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oUikge1xyXG4gICAgdmFyIF8gPSByZXF1aXJlKFwibG9kYXNoXCIpO1xyXG5cclxuICAgIHZhciBzaG91bGRDb21wb25lbnRVcGRhdGUgPSBmdW5jdGlvbiBzaG91bGRDb21wb25lbnRVcGRhdGUocHJvcHMsIHN0YXRlKSB7XHJcbiAgICAgICAgcmV0dXJuICEoXy5pc0VxdWFsKHRoaXMucHJvcHMsIHByb3BzKSAmJiBfLmlzRXF1YWwodGhpcy5zdGF0ZSwgc3RhdGUpKTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAbWVtYmVyb2YgUlxyXG4gICAgICogQHR5cGUge09iamVjdH1cclxuICAgICAqIEBwdWJsaWNcclxuICAgICAqL1xyXG4gICAgdmFyIFB1cmUgPSAvKiogQGxlbmRzIFB1cmUgKi97XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogSW1wbGVtZW50cyBSZWFjdCBzaG91bGRDb21wb25lbnRVcGRhdGUgZm9yIHB1cmUgY29tcG9uZW50cyxcclxuICAgICAgICAgKiBpZS4gdXBkYXRlIGlmZiBwcm9wcyBvciBzdGF0ZSBoYXMgY2hhbmdlZC5cclxuICAgICAgICAgKiBAdHlwZSB7RnVuY3Rpb259XHJcbiAgICAgICAgICogQHB1YmxpY1xyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHNob3VsZENvbXBvbmVudFVwZGF0ZTogc2hvdWxkQ29tcG9uZW50VXBkYXRlLFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIE1peGluIGZvciBQdXJlIGNvbXBvbmVudHMgaW1wbGVtZW50aW5nIHRoZSBwdXJlIHNob3VsZENvbXBvbmVudFVwZGF0ZS5cclxuICAgICAgICAgKiBAdHlwZSB7T2JqZWN0fVxyXG4gICAgICAgICAqIEBwdWJsaWNcclxuICAgICAgICAgKi9cclxuICAgICAgICBNaXhpbjoge1xyXG4gICAgICAgICAgICBfUHVyZU1peGluSXNQdXJlOiB0cnVlLFxyXG4gICAgICAgICAgICBzaG91bGRDb21wb25lbnRVcGRhdGU6IHNob3VsZENvbXBvbmVudFVwZGF0ZSxcclxuICAgICAgICB9LFxyXG4gICAgfTtcclxuXHJcbiAgICByZXR1cm4gUHVyZTtcclxufTtcclxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9