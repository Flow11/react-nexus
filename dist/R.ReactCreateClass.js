"use strict";

require("6to5/polyfill");
var Promise = require("bluebird");
module.exports = function (R) {
  var _ = R._;
  var React = R.React;

  var _vanillaCreateClass = React.createClass;

  var _patchedCreateClass = function createClass(specs) {
    _.defaults(specs, {
      getFluxStoreSubscriptions: function () {
        return {};
      },
      statics: {} });

    var createdClass;

    function __ReactNexusSurrogate(_ref) {
      var context = _ref.context;
      var props = _ref.props;
      var state = _ref.state;
      _.dev(function () {
        return context.should.be.an.Object && props.should.be.an.Object && state.should.be.an.Object;
      });
      var instance;
      React.withContext(context, function () {
        state = state || {};
        var element = React.createElement(createdClass, _.omit(props, "children"), props.children);
        instance = R.instantiateReactComponent(element);
        _.extend(instance, { context: context });
        if (instance.getInitialState) {
          state = _.extend({}, state, instance.getInitialState() || {});
        }
        _.extend(instance, { state: state, __ReactNexusSurrogate: __ReactNexusSurrogate });
      });
      return instance;
    }
    _.extend(specs.statics, { __ReactNexusSurrogate: __ReactNexusSurrogate });

    createdClass = _vanillaCreateClass(specs);
    return createdClass;
  };

  _.extend(_patchedCreateClass, {
    patchCreateClass: function () {
      React.createClass = _patchedCreateClass;
      return _patchedCreateClass;
    },

    restoreCreateClass: function () {
      React.createdClass = _vanillaCreateClass;
      return _vanillaCreateClass;
    } });

  return _patchedCreateClass.patchCreateClass();
};
//# sourceMappingURL=data:application/json;base64,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QUFPLG1CQUFtQixDQUFDLGdCQUFnQixFQUFFLENBQUM7Q0FDL0MsQ0FBQyIsImZpbGUiOiJSLlJlYWN0Q3JlYXRlQ2xhc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKFIpIHtcbiAgY29uc3QgXyA9IFIuXztcbiAgY29uc3QgUmVhY3QgPSBSLlJlYWN0O1xuXG4gIGNvbnN0IF92YW5pbGxhQ3JlYXRlQ2xhc3MgPSBSZWFjdC5jcmVhdGVDbGFzcztcblxuICBjb25zdCBfcGF0Y2hlZENyZWF0ZUNsYXNzID0gZnVuY3Rpb24gY3JlYXRlQ2xhc3Moc3BlY3MpIHtcbiAgICBfLmRlZmF1bHRzKHNwZWNzLCB7XG4gICAgICBnZXRGbHV4U3RvcmVTdWJzY3JpcHRpb25zKCkgeyByZXR1cm4ge307IH0sXG4gICAgICBzdGF0aWNzOiB7fSxcbiAgICB9KTtcblxuICAgIGxldCBjcmVhdGVkQ2xhc3M7XG5cbiAgICBmdW5jdGlvbiBfX1JlYWN0TmV4dXNTdXJyb2dhdGUoeyBjb250ZXh0LCBwcm9wcywgc3RhdGUgfSkge1xuICAgICAgXy5kZXYoKCkgPT4gY29udGV4dC5zaG91bGQuYmUuYW4uT2JqZWN0ICYmXG4gICAgICAgIHByb3BzLnNob3VsZC5iZS5hbi5PYmplY3QgJiZcbiAgICAgICAgc3RhdGUuc2hvdWxkLmJlLmFuLk9iamVjdFxuICAgICAgKTtcbiAgICAgIGxldCBpbnN0YW5jZTtcbiAgICAgIFJlYWN0LndpdGhDb250ZXh0KGNvbnRleHQsICgpID0+IHtcbiAgICAgICAgc3RhdGUgPSBzdGF0ZSB8fCB7fTtcbiAgICAgICAgbGV0IGVsZW1lbnQgPSBSZWFjdC5jcmVhdGVFbGVtZW50KGNyZWF0ZWRDbGFzcywgXy5vbWl0KHByb3BzLCAnY2hpbGRyZW4nKSwgcHJvcHMuY2hpbGRyZW4pO1xuICAgICAgICBpbnN0YW5jZSA9IFIuaW5zdGFudGlhdGVSZWFjdENvbXBvbmVudChlbGVtZW50KTtcbiAgICAgICAgXy5leHRlbmQoaW5zdGFuY2UsIHsgY29udGV4dCB9KTtcbiAgICAgICAgaWYoaW5zdGFuY2UuZ2V0SW5pdGlhbFN0YXRlKSB7XG4gICAgICAgICAgc3RhdGUgPSBfLmV4dGVuZCh7fSwgc3RhdGUsIGluc3RhbmNlLmdldEluaXRpYWxTdGF0ZSgpIHx8IHt9KTtcbiAgICAgICAgfVxuICAgICAgICBfLmV4dGVuZChpbnN0YW5jZSwgeyBzdGF0ZSwgX19SZWFjdE5leHVzU3Vycm9nYXRlIH0pO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gaW5zdGFuY2U7XG4gICAgfVxuICAgIF8uZXh0ZW5kKHNwZWNzLnN0YXRpY3MsIHsgX19SZWFjdE5leHVzU3Vycm9nYXRlIH0pO1xuXG4gICAgY3JlYXRlZENsYXNzID0gX3ZhbmlsbGFDcmVhdGVDbGFzcyhzcGVjcyk7XG4gICAgcmV0dXJuIGNyZWF0ZWRDbGFzcztcbiAgfTtcblxuICBfLmV4dGVuZChfcGF0Y2hlZENyZWF0ZUNsYXNzLCB7XG4gICAgcGF0Y2hDcmVhdGVDbGFzcygpIHtcbiAgICAgIFJlYWN0LmNyZWF0ZUNsYXNzID0gX3BhdGNoZWRDcmVhdGVDbGFzcztcbiAgICAgIHJldHVybiBfcGF0Y2hlZENyZWF0ZUNsYXNzO1xuICAgIH0sXG5cbiAgICByZXN0b3JlQ3JlYXRlQ2xhc3MoKSB7XG4gICAgICBSZWFjdC5jcmVhdGVkQ2xhc3MgPSBfdmFuaWxsYUNyZWF0ZUNsYXNzO1xuICAgICAgcmV0dXJuIF92YW5pbGxhQ3JlYXRlQ2xhc3M7XG4gICAgfSxcbiAgfSk7XG5cbiAgcmV0dXJuIF9wYXRjaGVkQ3JlYXRlQ2xhc3MucGF0Y2hDcmVhdGVDbGFzcygpO1xufTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==