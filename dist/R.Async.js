"use strict";

require("6to5/polyfill");
var Promise = require("bluebird");
module.exports = function (R) {
  var _ = R._;
  var requestAnimationFrame = require("raf");

  require("setimmediate");

  function clearAnimationFrame(handle) {
    requestAnimationFrame.cancel(handle);
  }

  var Async = {
    ifMounted: function (fn) {
      var _this = this;
      var _arguments = arguments;
      return function () {
        _.dev(function () {
          return _this._AsyncMixin.should.be.ok;
        });
        if (!_this._AsyncMixinHasUnmounted) {
          return fn.apply(_this, _arguments);
        }
      };
    },

    _deferredImmediate: function (fn) {
      var _this2 = this;
      var _arguments2 = arguments;
      return function () {
        var args = _arguments2;
        var id = _.uniqueId("setImmediate");
        var q = setImmediate(function () {
          delete _this2._AsyncMixinQueuedImmediates[id];
          return fn.apply(_this2, args);
        });
        _this2._AsyncMixinQueuedImmediates[id] = q;
        return id;
      };
    },

    _deferredAnimationFrame: function (fn) {
      var _this3 = this;
      var _arguments3 = arguments;
      return function () {
        var args = _arguments3;
        var id = _.uniqueId("setImmediate");
        var q = requestAnimationFrame(function () {
          delete _this3._AsyncMixinQueuedAnimationFrames[id];
          return fn.apply(_this3, args);
        });
        _this3._AsyncMixinQueuedAnimationFrames[id] = q;
        return id;
      };
    },

    _deferredTimeout: function (delay) {
      var _this4 = this;
      var _arguments4 = arguments;
      return function (fn) {
        return function () {
          var args = _arguments4;
          var id = _.uniqueId("setTimeout");
          var q = setTimeout(function () {
            delete _this4._AsyncMixinQueuedTimeouts[id];
            return fn.apply(_this4, args);
          }, delay);
          _this4._AsyncMixinQueuedTimeouts[id] = q;
          return q;
        };
      };
    },

    deferred: function (fn, delay) {
      var ifn = R.Async.ifMounted(fn);
      if (!delay) {
        return R.Async._deferredImmediate(ifn);
      } else {
        return R.Async._deferredTimeout(ifn, delay);
      }
    },

    deferredAnimationFrame: function (fn) {
      var ifn = R.Async.ifMounted(fn);
      return R.Async._deferredAnimationFrame(ifn);
    } };

  _.extend(Async, {
    Mixin: {
      _AsyncMixin: true,
      _AsyncMixinHasUnmounted: false,
      _AsyncMixinQueuedTimeouts: null,
      _AsyncMixinQueuedImmediates: null,
      _AsyncMixinQueuedAnimationFrames: null,

      componentWillMountcomponentWillMount: function () {
        this._AsyncMixinQueuedTimeouts = {};
        this._AsyncMixinQueuedImmediates = {};
        this._AsyncMixinQueuedAnimationFrames = {};
      },

      componentWillUnmount: function () {
        _.each(this._AsyncMixinQueuedTimeouts, clearTimeout);
        _.each(this._AsyncMixinQueuedImmediates, clearImmediate);
        _.each(this._AsyncMixinQueuedAnimationFrames, clearAnimationFrame);
        this._AsyncMixinHasUnmounted = true;
      },

      setStateIfMounted: Async.ifMounted(function (state) {
        this.setState(state);
      }) } });

  return Async;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImc6L3JlYWN0LW5leHVzL3JlYWN0LXJhaWxzL3NyYy9SLkFzeW5jLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0FBQ3pCLElBQU0sT0FBTyxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUNwQyxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQVMsQ0FBQyxFQUFFO0FBQzNCLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDZCxNQUFNLHFCQUFxQixHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQzs7QUFFN0MsU0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDOztBQUV4QixXQUFTLG1CQUFtQixDQUFDLE1BQU0sRUFBRTtBQUNuQyx5QkFBcUIsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7R0FDdEM7O0FBRUQsTUFBTSxLQUFLLEdBQUc7QUFDWixhQUFTLEVBQUEsVUFBQyxFQUFFLEVBQUU7OztBQUNaLGFBQU8sWUFBTTtBQUNYLFNBQUMsQ0FBQyxHQUFHLENBQUM7aUJBQU0sTUFBSyxXQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxFQUFFO1NBQUEsQ0FBQyxDQUFDO0FBQzNDLFlBQUcsQ0FBQyxNQUFLLHVCQUF1QixFQUFFO0FBQ2hDLGlCQUFPLEVBQUUsQ0FBQyxLQUFLLG1CQUFpQixDQUFDO1NBQ2xDO09BQ0YsQ0FBQztLQUNIOztBQUVELHNCQUFrQixFQUFBLFVBQUMsRUFBRSxFQUFFOzs7QUFDckIsYUFBTyxZQUFNO0FBQ1gsWUFBSSxJQUFJLGNBQVksQ0FBQztBQUNyQixZQUFJLEVBQUUsR0FBRyxDQUFDLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxDQUFDO0FBQ3BDLFlBQUksQ0FBQyxHQUFHLFlBQVksQ0FBQyxZQUFNO0FBQ3pCLGlCQUFPLE9BQUssMkJBQTJCLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDNUMsaUJBQU8sRUFBRSxDQUFDLEtBQUss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Q0FBQyxJQUFJLENBQUMsZ0NBQWdDLEVBQUUsbUJBQW1CLENBQUMsQ0FBQztBQUNuRSxZQUFJLENBQUMsdUJBQXVCLEdBQUcsSUFBSSxDQUFDO09BQ3JDOztBQUVELHVCQUFpQixFQUFFLEtBQUssQ0FBQyxTQUFTLENBQUMsVUFBUyxLQUFLLEVBQUU7QUFBRSxZQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO09BQUUsQ0FBQyxFQUM5RSxFQUNGLENBQUMsQ0FBQzs7QUFFSCxTQUFPLEtBQUssQ0FBQztDQUNkLENBQUMiLCJmaWxlIjoiUi5Bc3luYy5qcyIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJzZ0bzUvcG9seWZpbGwnKTtcbmNvbnN0IFByb21pc2UgPSByZXF1aXJlKCdibHVlYmlyZCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihSKSB7XG4gIGNvbnN0IF8gPSBSLl87XG4gIGNvbnN0IHJlcXVlc3RBbmltYXRpb25GcmFtZSA9IHJlcXVpcmUoJ3JhZicpO1xuXG4gIHJlcXVpcmUoJ3NldGltbWVkaWF0ZScpO1xuXG4gIGZ1bmN0aW9uIGNsZWFyQW5pbWF0aW9uRnJhbWUoaGFuZGxlKSB7XG4gICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lLmNhbmNlbChoYW5kbGUpO1xuICB9XG5cbiAgY29uc3QgQXN5bmMgPSB7XG4gICAgaWZNb3VudGVkKGZuKSB7XG4gICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICBfLmRldigoKSA9PiB0aGlzLl9Bc3luY01peGluLnNob3VsZC5iZS5vayk7XG4gICAgICAgIGlmKCF0aGlzLl9Bc3luY01peGluSGFzVW5tb3VudGVkKSB7XG4gICAgICAgICAgcmV0dXJuIGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfSxcblxuICAgIF9kZWZlcnJlZEltbWVkaWF0ZShmbikge1xuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgbGV0IGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgICAgIGxldCBpZCA9IF8udW5pcXVlSWQoJ3NldEltbWVkaWF0ZScpO1xuICAgICAgICBsZXQgcSA9IHNldEltbWVkaWF0ZSgoKSA9PiB7XG4gICAgICAgICAgZGVsZXRlIHRoaXMuX0FzeW5jTWl4aW5RdWV1ZWRJbW1lZGlhdGVzW2lkXTtcbiAgICAgICAgICByZXR1cm4gZm4uYXBwbHkodGhpcywgYXJncyk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLl9Bc3luY01peGluUXVldWVkSW1tZWRpYXRlc1tpZF0gPSBxO1xuICAgICAgICByZXR1cm4gaWQ7XG4gICAgICB9O1xuICAgIH0sXG5cbiAgICBfZGVmZXJyZWRBbmltYXRpb25GcmFtZShmbikge1xuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgbGV0IGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgICAgIGxldCBpZCA9IF8udW5pcXVlSWQoJ3NldEltbWVkaWF0ZScpO1xuICAgICAgICBsZXQgcSA9IHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG4gICAgICAgICAgZGVsZXRlIHRoaXMuX0FzeW5jTWl4aW5RdWV1ZWRBbmltYXRpb25GcmFtZXNbaWRdO1xuICAgICAgICAgIHJldHVybiBmbi5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuX0FzeW5jTWl4aW5RdWV1ZWRBbmltYXRpb25GcmFtZXNbaWRdID0gcTtcbiAgICAgICAgcmV0dXJuIGlkO1xuICAgICAgfTtcbiAgICB9LFxuXG4gICAgX2RlZmVycmVkVGltZW91dChkZWxheSkge1xuICAgICAgcmV0dXJuIChmbikgPT4gKCkgPT4ge1xuICAgICAgICBsZXQgYXJncyA9IGFyZ3VtZW50cztcbiAgICAgICAgbGV0IGlkID0gXy51bmlxdWVJZCgnc2V0VGltZW91dCcpO1xuICAgICAgICBsZXQgcSA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIGRlbGV0ZSB0aGlzLl9Bc3luY01peGluUXVldWVkVGltZW91dHNbaWRdO1xuICAgICAgICAgIHJldHVybiBmbi5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICAgICAgfSwgZGVsYXkpO1xuICAgICAgICB0aGlzLl9Bc3luY01peGluUXVldWVkVGltZW91dHNbaWRdID0gcTtcbiAgICAgICAgcmV0dXJuIHE7XG4gICAgICB9O1xuICAgIH0sXG5cbiAgICBkZWZlcnJlZChmbiwgZGVsYXkpIHtcbiAgICAgIGxldCBpZm4gPSBSLkFzeW5jLmlmTW91bnRlZChmbik7XG4gICAgICBpZighZGVsYXkpIHtcbiAgICAgICAgcmV0dXJuIFIuQXN5bmMuX2RlZmVycmVkSW1tZWRpYXRlKGlmbik7XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIFIuQXN5bmMuX2RlZmVycmVkVGltZW91dChpZm4sIGRlbGF5KTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgZGVmZXJyZWRBbmltYXRpb25GcmFtZShmbikge1xuICAgICAgbGV0IGlmbiA9IFIuQXN5bmMuaWZNb3VudGVkKGZuKTtcbiAgICAgIHJldHVybiBSLkFzeW5jLl9kZWZlcnJlZEFuaW1hdGlvbkZyYW1lKGlmbik7XG4gICAgfSxcbiAgfTtcblxuICBfLmV4dGVuZChBc3luYywge1xuICAgIE1peGluOiB7XG4gICAgICBfQXN5bmNNaXhpbjogdHJ1ZSxcbiAgICAgIF9Bc3luY01peGluSGFzVW5tb3VudGVkOiBmYWxzZSxcbiAgICAgIF9Bc3luY01peGluUXVldWVkVGltZW91dHM6IG51bGwsXG4gICAgICBfQXN5bmNNaXhpblF1ZXVlZEltbWVkaWF0ZXM6IG51bGwsXG4gICAgICBfQXN5bmNNaXhpblF1ZXVlZEFuaW1hdGlvbkZyYW1lczogbnVsbCxcblxuICAgICAgY29tcG9uZW50V2lsbE1vdW50Y29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgICAgICB0aGlzLl9Bc3luY01peGluUXVldWVkVGltZW91dHMgPSB7fTtcbiAgICAgICAgdGhpcy5fQXN5bmNNaXhpblF1ZXVlZEltbWVkaWF0ZXMgPSB7fTtcbiAgICAgICAgdGhpcy5fQXN5bmNNaXhpblF1ZXVlZEFuaW1hdGlvbkZyYW1lcyA9IHt9O1xuICAgICAgfSxcblxuICAgICAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICAgIF8uZWFjaCh0aGlzLl9Bc3luY01peGluUXVldWVkVGltZW91dHMsIGNsZWFyVGltZW91dCk7XG4gICAgICAgIF8uZWFjaCh0aGlzLl9Bc3luY01peGluUXVldWVkSW1tZWRpYXRlcywgY2xlYXJJbW1lZGlhdGUpO1xuICAgICAgICBfLmVhY2godGhpcy5fQXN5bmNNaXhpblF1ZXVlZEFuaW1hdGlvbkZyYW1lcywgY2xlYXJBbmltYXRpb25GcmFtZSk7XG4gICAgICAgIHRoaXMuX0FzeW5jTWl4aW5IYXNVbm1vdW50ZWQgPSB0cnVlO1xuICAgICAgfSxcblxuICAgICAgc2V0U3RhdGVJZk1vdW50ZWQ6IEFzeW5jLmlmTW91bnRlZChmdW5jdGlvbihzdGF0ZSkgeyB0aGlzLnNldFN0YXRlKHN0YXRlKTsgfSksXG4gICAgfSxcbiAgfSk7XG5cbiAgcmV0dXJuIEFzeW5jO1xufTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==