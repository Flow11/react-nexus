"use strict";

require("6to5/polyfill");
var Promise = require("bluebird");
var $ = require("./R.$");
var _ = require("lodash-next");
var Animate = require("./R.Animate");
var App = require("./R.App");
var Async = require("./R.Async");
var Client = require("./R.Client");
var Component = require("./R.Component");
var Cordova = require("./R.Cordova");
var Dispatcher = require("./R.Dispatcher");
var EventEmitter = require("./R.EventEmitter");
var Flux = require("./R.Flux");
var Fullscreen = require("./R.Fullscreen");
var History = require("./R.History");
var instantiateReactComponent = require("react/lib/instantiateReactComponent");
var Localize = require("./R.Localize");
var Lock = require("./R.Lock");
var Pure = require("./R.Pure");
var React = require("react");
var ReactChildren = require("./R.ReactChildren");
var ReactCreateClass = require("./R.ReactCreateClass");
var Root = require("./R.Root");
var Router = require("nexus-router");
var should = _.should;
var Store = require("./R.Store");
var Style = require("./R.Style");
var Stylesheet = require("./R.Stylesheet");
var Window = require("./R.Window");
var XWindow = require("./R.XWindow");

var R = {};

// Top level dependencies
_.extend(R, { _: _, should: should, React: React, instantiateReactComponent: instantiateReactComponent, Lock: Lock, Router: Router });

// React monkey patches
_.extend(R, {
  ReactChildren: ReactChildren(R),
  ReactCreateClass: ReactCreateClass(R) });

// React Nexus core
_.extend(R, {
  $: $(R),
  Animate: Animate(R),
  App: App(R),
  Aysnc: Async(R),
  Client: Client(R),
  Dispatcher: Dispatcher(R),
  EventEmitter: EventEmitter(R),
  Flux: Flux(R),
  Pure: Pure(R),
  Store: Store(R) });

// React Nexus components
_.extend(R, {
  Component: Component(R),
  Root: Root(R) });

// React Nexus standard app plugins
_.extend(R, {
  Plugins: {
    Cordova: Cordova(R),
    Fullscreen: Fullscreen(R),
    History: History(R),
    Localize: Localize(R),
    Window: Window(R),
    XWindow: XWindow(R) } });

module.exports = R;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImY6L1VzZXJzL0VsaWUvZ2l0L3JlYWN0L3JlYWN0LXJhaWxzL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQztBQUN6QixJQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDcEMsSUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQzNCLElBQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUNqQyxJQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDdkMsSUFBTSxHQUFHLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQy9CLElBQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUNuQyxJQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDckMsSUFBTSxTQUFTLEdBQUcsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0FBQzNDLElBQU0sT0FBTyxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUN2QyxJQUFNLFVBQVUsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztBQUM3QyxJQUFNLFlBQVksR0FBRyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQztBQUNqRCxJQUFNLElBQUksR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDakMsSUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUM7QUFDN0MsSUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBQ3ZDLElBQU0seUJBQXlCLEdBQUcsT0FBTyxDQUFDLHFDQUFxQyxDQUFDLENBQUM7QUFDakYsSUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0FBQ3pDLElBQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUNqQyxJQUFNLElBQUksR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDakMsSUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQy9CLElBQU0sYUFBYSxHQUFHLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0FBQ25ELElBQU0sZ0JBQWdCLEdBQUcsT0FBTyxDQUFDLHNCQUFzQixDQUFDLENBQUM7QUFDekQsSUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQ2pDLElBQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUN2QyxJQUFNLE1BQU0sR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDO0FBQ3hCLElBQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUNuQyxJQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7QUFDbkMsSUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUM7QUFDN0MsSUFBTSxNQUFNLEdBQUcsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDO0FBQ3JDLElBQU0sT0FBTyxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQzs7QUFFdkMsSUFBTSxDQUFDLEdBQUcsRUFBRSxDQUFDOzs7QUFHYixDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRCxDQUFDLEVBQUUsTUFBTSxFQUFOLE1BQU0sRUFBRSxLQUFLLEVBQUwsS0FBSyxFQUFFLHlCQUF5QixFQUF6Qix5QkFBeUIsRUFBRSxJQUFJLEVBQUosSUFBSSxFQUFFLE1BQU0sRUFBTixNQUFNLEVBQUUsQ0FBQyxDQUFDOzs7QUFHM0UsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUU7QUFDVixlQUFhLEVBQUUsYUFBYSxDQUFDLENBQUMsQ0FBQztBQUMvQixrQkFBZ0IsRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsRUFDdEMsQ0FBQyxDQUFDOzs7QUFHSCxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRTtBQUNWLEdBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ1AsU0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7QUFDbkIsS0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7QUFDWCxPQUFLLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQztBQUNmLFFBQU0sRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDO0FBQ2pCLFlBQVUsRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDO0FBQ3pCLGNBQVksRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDO0FBQzdCLE1BQUksRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBQ2IsTUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7QUFDYixPQUFLLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUNoQixDQUFDLENBQUM7Ozs7QUFJRDtBQUNBLGlCQUNELENBQUMsQ0FBQzs7O0FBR0gsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUU7QUFDVixTQUFPLEVBQUU7QUFDUCxXQUFPLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQztBQUNuQixjQUFVLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQztBQUN6QixXQUFPLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQztBQUNuQixZQUFRLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQztBQUNyQixVQUFNLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQztBQUNqQixXQUFPLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUNwQixFQUNGLENBQUMsQ0FBQzs7QUFFSCxNQUFNLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQyIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJzZ0bzUvcG9seWZpbGwnKTtcbmNvbnN0IFByb21pc2UgPSByZXF1aXJlKCdibHVlYmlyZCcpO1xuY29uc3QgJCA9IHJlcXVpcmUoJy4vUi4kJyk7XHJcbmNvbnN0IF8gPSByZXF1aXJlKCdsb2Rhc2gtbmV4dCcpO1xyXG5jb25zdCBBbmltYXRlID0gcmVxdWlyZSgnLi9SLkFuaW1hdGUnKTtcclxuY29uc3QgQXBwID0gcmVxdWlyZSgnLi9SLkFwcCcpO1xyXG5jb25zdCBBc3luYyA9IHJlcXVpcmUoJy4vUi5Bc3luYycpO1xyXG5jb25zdCBDbGllbnQgPSByZXF1aXJlKCcuL1IuQ2xpZW50Jyk7XHJcbmNvbnN0IENvbXBvbmVudCA9IHJlcXVpcmUoJy4vUi5Db21wb25lbnQnKTtcclxuY29uc3QgQ29yZG92YSA9IHJlcXVpcmUoJy4vUi5Db3Jkb3ZhJyk7XHJcbmNvbnN0IERpc3BhdGNoZXIgPSByZXF1aXJlKCcuL1IuRGlzcGF0Y2hlcicpO1xyXG5jb25zdCBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCcuL1IuRXZlbnRFbWl0dGVyJyk7XHJcbmNvbnN0IEZsdXggPSByZXF1aXJlKCcuL1IuRmx1eCcpO1xyXG5jb25zdCBGdWxsc2NyZWVuID0gcmVxdWlyZSgnLi9SLkZ1bGxzY3JlZW4nKTtcclxuY29uc3QgSGlzdG9yeSA9IHJlcXVpcmUoJy4vUi5IaXN0b3J5Jyk7XHJcbmNvbnN0IGluc3RhbnRpYXRlUmVhY3RDb21wb25lbnQgPSByZXF1aXJlKCdyZWFjdC9saWIvaW5zdGFudGlhdGVSZWFjdENvbXBvbmVudCcpO1xyXG5jb25zdCBMb2NhbGl6ZSA9IHJlcXVpcmUoJy4vUi5Mb2NhbGl6ZScpO1xyXG5jb25zdCBMb2NrID0gcmVxdWlyZSgnLi9SLkxvY2snKTtcclxuY29uc3QgUHVyZSA9IHJlcXVpcmUoJy4vUi5QdXJlJyk7XHJcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcclxuY29uc3QgUmVhY3RDaGlsZHJlbiA9IHJlcXVpcmUoJy4vUi5SZWFjdENoaWxkcmVuJyk7XHJcbmNvbnN0IFJlYWN0Q3JlYXRlQ2xhc3MgPSByZXF1aXJlKCcuL1IuUmVhY3RDcmVhdGVDbGFzcycpO1xyXG5jb25zdCBSb290ID0gcmVxdWlyZSgnLi9SLlJvb3QnKTtcclxuY29uc3QgUm91dGVyID0gcmVxdWlyZSgnbmV4dXMtcm91dGVyJyk7XHJcbmNvbnN0IHNob3VsZCA9IF8uc2hvdWxkO1xyXG5jb25zdCBTdG9yZSA9IHJlcXVpcmUoJy4vUi5TdG9yZScpO1xyXG5jb25zdCBTdHlsZSA9IHJlcXVpcmUoJy4vUi5TdHlsZScpO1xyXG5jb25zdCBTdHlsZXNoZWV0ID0gcmVxdWlyZSgnLi9SLlN0eWxlc2hlZXQnKTtcclxuY29uc3QgV2luZG93ID0gcmVxdWlyZSgnLi9SLldpbmRvdycpO1xyXG5jb25zdCBYV2luZG93ID0gcmVxdWlyZSgnLi9SLlhXaW5kb3cnKTtcclxuXHJcbmNvbnN0IFIgPSB7fTtcclxuXHJcbi8vIFRvcCBsZXZlbCBkZXBlbmRlbmNpZXNcclxuXy5leHRlbmQoUiwgeyBfLCBzaG91bGQsIFJlYWN0LCBpbnN0YW50aWF0ZVJlYWN0Q29tcG9uZW50LCBMb2NrLCBSb3V0ZXIgfSk7XHJcblxyXG4vLyBSZWFjdCBtb25rZXkgcGF0Y2hlc1xyXG5fLmV4dGVuZChSLCB7XHJcbiAgUmVhY3RDaGlsZHJlbjogUmVhY3RDaGlsZHJlbihSKSxcclxuICBSZWFjdENyZWF0ZUNsYXNzOiBSZWFjdENyZWF0ZUNsYXNzKFIpLFxyXG59KTtcclxuXHJcbi8vIFJlYWN0IE5leHVzIGNvcmVcclxuXy5leHRlbmQoUiwge1xyXG4gICQ6ICQoUiksXHJcbiAgQW5pbWF0ZTogQW5pbWF0ZShSKSxcclxuICBBcHA6IEFwcChSKSxcclxuICBBeXNuYzogQXN5bmMoUiksXHJcbiAgQ2xpZW50OiBDbGllbnQoUiksXHJcbiAgRGlzcGF0Y2hlcjogRGlzcGF0Y2hlcihSKSxcclxuICBFdmVudEVtaXR0ZXI6IEV2ZW50RW1pdHRlcihSKSxcclxuICBGbHV4OiBGbHV4KFIpLFxyXG4gIFB1cmU6IFB1cmUoUiksXHJcbiAgU3RvcmU6IFN0b3JlKFIpLFxyXG59KTtcclxuXHJcbi8vIFJlYWN0IE5leHVzIGNvbXBvbmVudHNcclxuXy5leHRlbmQoUiwge1xyXG4gIENvbXBvbmVudDogQ29tcG9uZW50KFIpLFxyXG4gIFJvb3Q6IFJvb3QoUiksXHJcbn0pO1xyXG5cclxuLy8gUmVhY3QgTmV4dXMgc3RhbmRhcmQgYXBwIHBsdWdpbnNcclxuXy5leHRlbmQoUiwge1xyXG4gIFBsdWdpbnM6IHtcclxuICAgIENvcmRvdmE6IENvcmRvdmEoUiksXHJcbiAgICBGdWxsc2NyZWVuOiBGdWxsc2NyZWVuKFIpLFxyXG4gICAgSGlzdG9yeTogSGlzdG9yeShSKSxcclxuICAgIExvY2FsaXplOiBMb2NhbGl6ZShSKSxcclxuICAgIFdpbmRvdzogV2luZG93KFIpLFxyXG4gICAgWFdpbmRvdzogWFdpbmRvdyhSKSxcclxuICB9LFxyXG59KTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gUjtcclxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9