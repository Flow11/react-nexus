"use strict";

require("6to5/polyfill");
var Promise = require("bluebird");
var $ = require("./R.$");
var _ = require("lodash-next");
var Animate = require("./R.Animate");
var App = require("./R.App");
var Async = require("./R.Async");
var Client = require("./R.Client");
var Component = require("./R.Component");
var Cordova = require("./R.Cordova");
var Dispatcher = require("./R.Dispatcher");
var EventEmitter = require("./R.EventEmitter");
var Flux = require("./R.Flux");
var Fullscreen = require("./R.Fullscreen");
var History = require("./R.History");
var instantiateReactComponent = require("react/lib/instantiateReactComponent");
var Localize = require("./R.Localize");
var Lock = require("./R.Lock");
var Pure = require("./R.Pure");
var React = require("react");
var ReactChildren = require("./R.ReactChildren");
var ReactCreateClass = require("./R.ReactCreateClass");
var Root = require("./R.Root");
var Router = require("nexus-router");
var should = _.should;
var Store = require("./R.Store");
var Window = require("./R.Window");
var XWindow = require("./R.XWindow");


// Top level dependencies
var R = { _: _, should: should, React: React, instantiateReactComponent: instantiateReactComponent, Lock: Lock, Router: Router };

// React monkey patches
R.ReactChildren = ReactChildren(R);
R.ReactCreateClass = ReactCreateClass(R);

// React Nexus Core
R.Pure = Pure(R);
R.Async = Async(R);
R.Animate = Animate(R);
R.Flux = Flux(R);
R.$ = $(R);
R.App = App(R);
R.Client = Client(R);
R.Dispatcher = Dispatcher(R);
R.EventEmitter = EventEmitter(R);
R.Store = Store(R);

// React Nexus components
R.Component = Component(R);
R.Root = Root(R);

// React Nexus App plugins
R.Plugins = {};
R.Plugins.Cordova = Cordova(R);
R.Plugins.Fullscreen = Fullscreen(R);
R.Plugins.History = History(R);
R.Plugins.Localize = Localize(R);
R.Plugins.Window = Window(R);
R.Plugins.XWindow = XWindow(R);

if (window && !window.R) {
  window.R = R;
}
if (global && !global.R) {
  global.R = R;
}

module.exports = R;
//# sourceMappingURL=data:application/json;base64,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LENBQUMsQ0FBQztDQUNkO0FBQ0QsSUFBRyxNQUFNLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFO0FBQ3RCLFFBQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0NBQ2Q7O0FBRUQsTUFBTSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCAkID0gcmVxdWlyZSgnLi9SLiQnKTtcbmNvbnN0IF8gPSByZXF1aXJlKCdsb2Rhc2gtbmV4dCcpO1xuY29uc3QgQW5pbWF0ZSA9IHJlcXVpcmUoJy4vUi5BbmltYXRlJyk7XG5jb25zdCBBcHAgPSByZXF1aXJlKCcuL1IuQXBwJyk7XG5jb25zdCBBc3luYyA9IHJlcXVpcmUoJy4vUi5Bc3luYycpO1xuY29uc3QgQ2xpZW50ID0gcmVxdWlyZSgnLi9SLkNsaWVudCcpO1xuY29uc3QgQ29tcG9uZW50ID0gcmVxdWlyZSgnLi9SLkNvbXBvbmVudCcpO1xuY29uc3QgQ29yZG92YSA9IHJlcXVpcmUoJy4vUi5Db3Jkb3ZhJyk7XG5jb25zdCBEaXNwYXRjaGVyID0gcmVxdWlyZSgnLi9SLkRpc3BhdGNoZXInKTtcbmNvbnN0IEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJy4vUi5FdmVudEVtaXR0ZXInKTtcbmNvbnN0IEZsdXggPSByZXF1aXJlKCcuL1IuRmx1eCcpO1xuY29uc3QgRnVsbHNjcmVlbiA9IHJlcXVpcmUoJy4vUi5GdWxsc2NyZWVuJyk7XG5jb25zdCBIaXN0b3J5ID0gcmVxdWlyZSgnLi9SLkhpc3RvcnknKTtcbmNvbnN0IGluc3RhbnRpYXRlUmVhY3RDb21wb25lbnQgPSByZXF1aXJlKCdyZWFjdC9saWIvaW5zdGFudGlhdGVSZWFjdENvbXBvbmVudCcpO1xuY29uc3QgTG9jYWxpemUgPSByZXF1aXJlKCcuL1IuTG9jYWxpemUnKTtcbmNvbnN0IExvY2sgPSByZXF1aXJlKCcuL1IuTG9jaycpO1xuY29uc3QgUHVyZSA9IHJlcXVpcmUoJy4vUi5QdXJlJyk7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCBSZWFjdENoaWxkcmVuID0gcmVxdWlyZSgnLi9SLlJlYWN0Q2hpbGRyZW4nKTtcbmNvbnN0IFJlYWN0Q3JlYXRlQ2xhc3MgPSByZXF1aXJlKCcuL1IuUmVhY3RDcmVhdGVDbGFzcycpO1xuY29uc3QgUm9vdCA9IHJlcXVpcmUoJy4vUi5Sb290Jyk7XG5jb25zdCBSb3V0ZXIgPSByZXF1aXJlKCduZXh1cy1yb3V0ZXInKTtcbmNvbnN0IHNob3VsZCA9IF8uc2hvdWxkO1xuY29uc3QgU3RvcmUgPSByZXF1aXJlKCcuL1IuU3RvcmUnKTtcbmNvbnN0IFdpbmRvdyA9IHJlcXVpcmUoJy4vUi5XaW5kb3cnKTtcbmNvbnN0IFhXaW5kb3cgPSByZXF1aXJlKCcuL1IuWFdpbmRvdycpO1xuXG5cbi8vIFRvcCBsZXZlbCBkZXBlbmRlbmNpZXNcbmNvbnN0IFIgPSB7IF8sIHNob3VsZCwgUmVhY3QsIGluc3RhbnRpYXRlUmVhY3RDb21wb25lbnQsIExvY2ssIFJvdXRlciB9O1xuXG4vLyBSZWFjdCBtb25rZXkgcGF0Y2hlc1xuUi5SZWFjdENoaWxkcmVuID0gUmVhY3RDaGlsZHJlbihSKTtcblIuUmVhY3RDcmVhdGVDbGFzcyA9IFJlYWN0Q3JlYXRlQ2xhc3MoUik7XG5cbi8vIFJlYWN0IE5leHVzIENvcmVcblIuUHVyZSA9IFB1cmUoUik7XG5SLkFzeW5jID0gQXN5bmMoUik7XG5SLkFuaW1hdGUgPSBBbmltYXRlKFIpO1xuUi5GbHV4ID0gRmx1eChSKTtcblIuJCA9ICQoUik7XG5SLkFwcCA9IEFwcChSKTtcblIuQ2xpZW50ID0gQ2xpZW50KFIpO1xuUi5EaXNwYXRjaGVyID0gRGlzcGF0Y2hlcihSKTtcblIuRXZlbnRFbWl0dGVyID0gRXZlbnRFbWl0dGVyKFIpO1xuUi5TdG9yZSA9IFN0b3JlKFIpO1xuXG4vLyBSZWFjdCBOZXh1cyBjb21wb25lbnRzXG5SLkNvbXBvbmVudCA9IENvbXBvbmVudChSKTtcblIuUm9vdCA9IFJvb3QoUik7XG5cbi8vIFJlYWN0IE5leHVzIEFwcCBwbHVnaW5zXG5SLlBsdWdpbnMgPSB7fTtcblIuUGx1Z2lucy5Db3Jkb3ZhID0gQ29yZG92YShSKTtcblIuUGx1Z2lucy5GdWxsc2NyZWVuID0gRnVsbHNjcmVlbihSKTtcblIuUGx1Z2lucy5IaXN0b3J5ID0gSGlzdG9yeShSKTtcblIuUGx1Z2lucy5Mb2NhbGl6ZSA9IExvY2FsaXplKFIpO1xuUi5QbHVnaW5zLldpbmRvdyA9IFdpbmRvdyhSKTtcblIuUGx1Z2lucy5YV2luZG93ID0gWFdpbmRvdyhSKTtcblxuaWYod2luZG93ICYmICF3aW5kb3cuUikge1xuICB3aW5kb3cuUiA9IFI7XG59XG5pZihnbG9iYWwgJiYgIWdsb2JhbC5SKSB7XG4gIGdsb2JhbC5SID0gUjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBSO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9