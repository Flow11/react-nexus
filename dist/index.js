"use strict";

require("6to5/polyfill");
var Promise = require("bluebird");
var $ = require("./R.$");
var _ = require("lodash-next");
var Animate = require("./R.Animate");
var App = require("./R.App");
var Async = require("./R.Async");
var Client = require("./R.Client");
var Component = require("./R.Component");
var Cordova = require("./R.Cordova");
var Dispatcher = require("./R.Dispatcher");
var EventEmitter = require("./R.EventEmitter");
var Flux = require("./R.Flux");
var Fullscreen = require("./R.Fullscreen");
var History = require("./R.History");
var instantiateReactComponent = require("react/lib/instantiateReactComponent");
var Localize = require("./R.Localize");
var Lock = require("./R.Lock");
var Pure = require("./R.Pure");
var React = require("react");
var ReactChildren = require("./R.ReactChildren");
var ReactCreateClass = require("./R.ReactCreateClass");
var Root = require("./R.Root");
var Router = require("./R.Router");
var should = _.should;
var Store = require("./R.Store");
var Style = require("./R.Style");
var Stylesheet = require("./R.Stylesheet");
var Uplink = require("./R.Uplink");
var Window = require("./R.Window");
var XWindow = require("./R.XWindow");

var R = {};

// Top level dependencies
_.extend(R, { _: _, should: should, React: React, instantiateReactComponent: instantiateReactComponent, Lock: Lock });

// React monkey patches
_.extend(R, {
  ReactChildren: ReactChildren(R),
  ReactCreateClass: ReactCreateClass(R) });

// React Nexus core
_.extend(R, {
  $: $(R),
  Animate: Animate(R),
  App: App(R),
  Aysnc: Async(R),
  Client: Client(R),
  Component: Component(R),
  Dispatcher: Dispatcher(R),
  EventEmitter: EventEmitter(R),
  Flux: Flux(R),
  Pure: Pure(R),
  Root: Root(R),
  Router: Router(R),
  Store: Store(R) });

// React Nexus extensions
_.extend(R, {
  Uplink: Uplink(R) });

// React Nexus standard app plugins
_.extend(R, {
  Plugins: {
    Cordova: Cordova(R),
    Fullscreen: Fullscreen(R),
    History: History(R),
    Localize: Localize(R),
    Window: Window(R),
    XWindow: XWindow(R) } });

module.exports = R;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImY6L1VzZXJzL0VsaWUvZ2l0L3JlYWN0L3JlYWN0LXJhaWxzL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQztBQUN6QixJQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDcEMsSUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQzNCLElBQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUNqQyxJQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDdkMsSUFBTSxHQUFHLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQy9CLElBQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUNuQyxJQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDckMsSUFBTSxTQUFTLEdBQUcsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0FBQzNDLElBQU0sT0FBTyxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUN2QyxJQUFNLFVBQVUsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztBQUM3QyxJQUFNLFlBQVksR0FBRyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQztBQUNqRCxJQUFNLElBQUksR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDakMsSUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUM7QUFDN0MsSUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBQ3ZDLElBQU0seUJBQXlCLEdBQUcsT0FBTyxDQUFDLHFDQUFxQyxDQUFDLENBQUM7QUFDakYsSUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0FBQ3pDLElBQU0sSUFBSSxHQUFHLE9B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QUFDIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnNnRvNS9wb2x5ZmlsbCcpO1xuY29uc3QgUHJvbWlzZSA9IHJlcXVpcmUoJ2JsdWViaXJkJyk7XG5jb25zdCAkID0gcmVxdWlyZSgnLi9SLiQnKTtcbmNvbnN0IF8gPSByZXF1aXJlKCdsb2Rhc2gtbmV4dCcpO1xuY29uc3QgQW5pbWF0ZSA9IHJlcXVpcmUoJy4vUi5BbmltYXRlJyk7XG5jb25zdCBBcHAgPSByZXF1aXJlKCcuL1IuQXBwJyk7XG5jb25zdCBBc3luYyA9IHJlcXVpcmUoJy4vUi5Bc3luYycpO1xuY29uc3QgQ2xpZW50ID0gcmVxdWlyZSgnLi9SLkNsaWVudCcpO1xuY29uc3QgQ29tcG9uZW50ID0gcmVxdWlyZSgnLi9SLkNvbXBvbmVudCcpO1xuY29uc3QgQ29yZG92YSA9IHJlcXVpcmUoJy4vUi5Db3Jkb3ZhJyk7XG5jb25zdCBEaXNwYXRjaGVyID0gcmVxdWlyZSgnLi9SLkRpc3BhdGNoZXInKTtcbmNvbnN0IEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJy4vUi5FdmVudEVtaXR0ZXInKTtcbmNvbnN0IEZsdXggPSByZXF1aXJlKCcuL1IuRmx1eCcpO1xuY29uc3QgRnVsbHNjcmVlbiA9IHJlcXVpcmUoJy4vUi5GdWxsc2NyZWVuJyk7XG5jb25zdCBIaXN0b3J5ID0gcmVxdWlyZSgnLi9SLkhpc3RvcnknKTtcbmNvbnN0IGluc3RhbnRpYXRlUmVhY3RDb21wb25lbnQgPSByZXF1aXJlKCdyZWFjdC9saWIvaW5zdGFudGlhdGVSZWFjdENvbXBvbmVudCcpO1xuY29uc3QgTG9jYWxpemUgPSByZXF1aXJlKCcuL1IuTG9jYWxpemUnKTtcbmNvbnN0IExvY2sgPSByZXF1aXJlKCcuL1IuTG9jaycpO1xuY29uc3QgUHVyZSA9IHJlcXVpcmUoJy4vUi5QdXJlJyk7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCBSZWFjdENoaWxkcmVuID0gcmVxdWlyZSgnLi9SLlJlYWN0Q2hpbGRyZW4nKTtcbmNvbnN0IFJlYWN0Q3JlYXRlQ2xhc3MgPSByZXF1aXJlKCcuL1IuUmVhY3RDcmVhdGVDbGFzcycpO1xuY29uc3QgUm9vdCA9IHJlcXVpcmUoJy4vUi5Sb290Jyk7XG5jb25zdCBSb3V0ZXIgPSByZXF1aXJlKCcuL1IuUm91dGVyJyk7XG5jb25zdCBzaG91bGQgPSBfLnNob3VsZDtcbmNvbnN0IFN0b3JlID0gcmVxdWlyZSgnLi9SLlN0b3JlJyk7XG5jb25zdCBTdHlsZSA9IHJlcXVpcmUoJy4vUi5TdHlsZScpO1xuY29uc3QgU3R5bGVzaGVldCA9IHJlcXVpcmUoJy4vUi5TdHlsZXNoZWV0Jyk7XG5jb25zdCBVcGxpbmsgPSByZXF1aXJlKCcuL1IuVXBsaW5rJyk7XG5jb25zdCBXaW5kb3cgPSByZXF1aXJlKCcuL1IuV2luZG93Jyk7XG5jb25zdCBYV2luZG93ID0gcmVxdWlyZSgnLi9SLlhXaW5kb3cnKTtcblxuY29uc3QgUiA9IHt9O1xuXG4vLyBUb3AgbGV2ZWwgZGVwZW5kZW5jaWVzXG5fLmV4dGVuZChSLCB7IF8sIHNob3VsZCwgUmVhY3QsIGluc3RhbnRpYXRlUmVhY3RDb21wb25lbnQsIExvY2sgfSk7XG5cbi8vIFJlYWN0IG1vbmtleSBwYXRjaGVzXG5fLmV4dGVuZChSLCB7XG4gIFJlYWN0Q2hpbGRyZW46IFJlYWN0Q2hpbGRyZW4oUiksXG4gIFJlYWN0Q3JlYXRlQ2xhc3M6IFJlYWN0Q3JlYXRlQ2xhc3MoUiksXG59KTtcblxuLy8gUmVhY3QgTmV4dXMgY29yZVxuXy5leHRlbmQoUiwge1xuICAkOiAkKFIpLFxuICBBbmltYXRlOiBBbmltYXRlKFIpLFxuICBBcHA6IEFwcChSKSxcbiAgQXlzbmM6IEFzeW5jKFIpLFxuICBDbGllbnQ6IENsaWVudChSKSxcbiAgQ29tcG9uZW50OiBDb21wb25lbnQoUiksXG4gIERpc3BhdGNoZXI6IERpc3BhdGNoZXIoUiksXG4gIEV2ZW50RW1pdHRlcjogRXZlbnRFbWl0dGVyKFIpLFxuICBGbHV4OiBGbHV4KFIpLFxuICBQdXJlOiBQdXJlKFIpLFxuICBSb290OiBSb290KFIpLFxuICBSb3V0ZXI6IFJvdXRlcihSKSxcbiAgU3RvcmU6IFN0b3JlKFIpLFxufSk7XG5cbi8vIFJlYWN0IE5leHVzIGV4dGVuc2lvbnNcbl8uZXh0ZW5kKFIsIHtcbiAgVXBsaW5rOiBVcGxpbmsoUiksXG59KTtcblxuLy8gUmVhY3QgTmV4dXMgc3RhbmRhcmQgYXBwIHBsdWdpbnNcbl8uZXh0ZW5kKFIsIHtcbiAgUGx1Z2luczoge1xuICAgIENvcmRvdmE6IENvcmRvdmEoUiksXG4gICAgRnVsbHNjcmVlbjogRnVsbHNjcmVlbihSKSxcbiAgICBIaXN0b3J5OiBIaXN0b3J5KFIpLFxuICAgIExvY2FsaXplOiBMb2NhbGl6ZShSKSxcbiAgICBXaW5kb3c6IFdpbmRvdyhSKSxcbiAgICBYV2luZG93OiBYV2luZG93KFIpLFxuICB9LFxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gUjtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==