"use strict";

require("6to5/polyfill");
var Promise = require("bluebird");
var _ = require("lodash");

var R = {};

// Top level depencies/monkey patches
R.React = require("react");
R.instantiateReactComponent = require("react/lib/instantiateReactComponent");
_.extend(R, require("./R.utils")(R));
R.Debug = require("./R.Debug")(R);
R.Lock = require("./R.Lock")(R);
R.ReactChildren = require("./R.ReactChildren")(R);
R.ReactCreateClass = require("./R.ReactCreateClass")(R);

// Core
R.Animate = require("./R.Animate")(R);
R.App = require("./R.App")(R);
R.Async = require("./R.Async")(R);
R.Dispatcher = require("./R.Dispatcher")(R);
R.EventEmitter = require("./R.EventEmitter")(R);
R.Flux = require("./R.Flux")(R);
R.Pure = require("./R.Pure")(R);
R.$ = require("./R.$")(R);
R.Router = require("./R.Router")(R);
R.Store = require("./R.Store")(R);
R.Style = require("./R.Style")(R);
R.Stylesheet = require("./R.Stylesheet")(R);
R.Uplink = require("./R.Uplink")(R);

// Plugins
R.Cordova = require("./R.Cordova")(R);
R.Fullscreen = require("./R.Fullscreen")(R);
R.History = require("./R.History")(R);
R.Localize = require("./R.Localize")(R);
R.Window = require("./R.Window")(R);
R.XWindow = require("./R.XWindow")(R);

// Core mixins
R.Root = require("./R.Root")(R);
R.Component = require("./R.Component")(R);

// Core wrapper
R.RenderServer = require("./R.RenderServer")(R);
R.SimpleUplinkServer = require("./R.SimpleUplinkServer")(R);

R.Debug.setMode(process.env.NODE_ENV || "development");

module.exports = R;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImY6L1VzZXJzL0VsaWUvZ2l0L3JlYWN0L3JlYWN0LXJhaWxzL3NyYy9zZXJ2ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUM7QUFDekIsSUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQ3BDLElBQUksQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQzs7QUFFMUIsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDOzs7QUFHWCxDQUFDLENBQUMsS0FBSyxHQUFtQixPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDM0MsQ0FBQyxDQUFDLHlCQUF5QixHQUFHLE9BQU8sQ0FBQyxxQ0FBcUMsQ0FBQyxDQUFDO0FBQzdFLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3JDLENBQUMsQ0FBQyxLQUFLLEdBQW1CLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNsRCxDQUFDLENBQUMsSUFBSSxHQUFvQixPQUFPLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDakQsQ0FBQyxDQUFDLGFBQWEsR0FBVyxPQUFPLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUMxRCxDQUFDLENBQUMsZ0JBQWdCLEdBQVEsT0FBTyxDQUFDLHNCQUFzQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7OztBQUc3RCxDQUFDLENBQUMsT0FBTyxHQUFpQixPQUFPLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDcEQsQ0FBQyxDQUFDLEdBQUcsR0FBcUIsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2hELENBQUMsQ0FBQyxLQUFLLEdBQW1CLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNsRCxDQUFDLENBQUMsVUFBVSxHQUFjLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3ZELENBQUMsQ0FBQyxZQUFZLEdBQVksT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDekQsQ0FBQyxDQUFDLElBQUksR0FBb0IsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2pELENBQUMsQ0FBQyxJQUFJLEdBQW9CLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNqRCxDQUFDLENBQUMsQ0FBQyxHQUF1QixPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDOUMsQ0FBQyxDQUFDLE1BQU0sR0FBa0IsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ25ELENBQUMsQ0FBQyxLQUFLLEdBQW1CLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNsRCxDQUFDLENBQUMsS0FBSyxHQUFtQixPQUFPLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbEQsQ0FBQyxDQUFDLFVBQVUsR0FBYyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN2RCxDQUFDLENBQUMsTUFBTSxHQUFrQixPQUFPLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7OztBQUduRCxDQUFDLENBQUMsT0FBTyxHQUFpQixPQUFPLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDcEQsQ0FBQyxDQUFDLFVBQVUsR0FBYyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN2RCxDQUFDLENBQUMsT0FBTyxHQUFpQixPQUFPLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDcEQsQ0FBQyxDQUFDLFFBQVEsR0FBZ0IsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3JELENBQUMsQ0FBQyxNQUFNLEdBQWtCLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNuRCxDQUFDLENBQUMsT0FBTyxHQUFpQixPQUFPLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7OztBQUdwRCxDQUFDLENBQUMsSUFBSSxHQUFvQixPQUFPLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDakQsQ0FBQyxDQUFDLFNBQVMsR0FBZSxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7OztBQUd0RCxDQUFDLENBQUMsWUFBWSxHQUFZLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3pELENBQUMsQ0FBQyxrQkFBa0IsR0FBTSxPQUFPLENBQUMsd0JBQXdCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzs7QUFFL0QsQ0FBQyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLElBQUksYUFBYSxDQUFDLENBQUM7O0FBRXZELE1BQU0sQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDIiwiZmlsZSI6InNlcnZlci5qcyIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJzZ0bzUvcG9seWZpbGwnKTtcbmNvbnN0IFByb21pc2UgPSByZXF1aXJlKCdibHVlYmlyZCcpO1xudmFyIF8gPSByZXF1aXJlKFwibG9kYXNoXCIpO1xyXG5cclxudmFyIFIgPSB7fTtcclxuXHJcbi8vIFRvcCBsZXZlbCBkZXBlbmNpZXMvbW9ua2V5IHBhdGNoZXNcclxuUi5SZWFjdCAgICAgICAgICAgICAgICAgPSByZXF1aXJlKFwicmVhY3RcIik7XHJcblIuaW5zdGFudGlhdGVSZWFjdENvbXBvbmVudCA9IHJlcXVpcmUoXCJyZWFjdC9saWIvaW5zdGFudGlhdGVSZWFjdENvbXBvbmVudFwiKTtcclxuXy5leHRlbmQoUiwgcmVxdWlyZShcIi4vUi51dGlsc1wiKShSKSk7XHJcblIuRGVidWcgICAgICAgICAgICAgICAgID0gcmVxdWlyZShcIi4vUi5EZWJ1Z1wiKShSKTtcclxuUi5Mb2NrICAgICAgICAgICAgICAgICAgPSByZXF1aXJlKFwiLi9SLkxvY2tcIikoUik7XHJcblIuUmVhY3RDaGlsZHJlbiAgICAgICAgID0gcmVxdWlyZShcIi4vUi5SZWFjdENoaWxkcmVuXCIpKFIpO1xyXG5SLlJlYWN0Q3JlYXRlQ2xhc3MgICAgICA9IHJlcXVpcmUoXCIuL1IuUmVhY3RDcmVhdGVDbGFzc1wiKShSKTtcclxuXHJcbi8vIENvcmVcclxuUi5BbmltYXRlICAgICAgICAgICAgICAgPSByZXF1aXJlKFwiLi9SLkFuaW1hdGVcIikoUik7XHJcblIuQXBwICAgICAgICAgICAgICAgICAgID0gcmVxdWlyZShcIi4vUi5BcHBcIikoUik7XHJcblIuQXN5bmMgICAgICAgICAgICAgICAgID0gcmVxdWlyZShcIi4vUi5Bc3luY1wiKShSKTtcclxuUi5EaXNwYXRjaGVyICAgICAgICAgICAgPSByZXF1aXJlKFwiLi9SLkRpc3BhdGNoZXJcIikoUik7XHJcblIuRXZlbnRFbWl0dGVyICAgICAgICAgID0gcmVxdWlyZShcIi4vUi5FdmVudEVtaXR0ZXJcIikoUik7XHJcblIuRmx1eCAgICAgICAgICAgICAgICAgID0gcmVxdWlyZShcIi4vUi5GbHV4XCIpKFIpO1xyXG5SLlB1cmUgICAgICAgICAgICAgICAgICA9IHJlcXVpcmUoXCIuL1IuUHVyZVwiKShSKTtcclxuUi4kICAgICAgICAgICAgICAgICAgICAgPSByZXF1aXJlKFwiLi9SLiRcIikoUik7XHJcblIuUm91dGVyICAgICAgICAgICAgICAgID0gcmVxdWlyZShcIi4vUi5Sb3V0ZXJcIikoUik7XHJcblIuU3RvcmUgICAgICAgICAgICAgICAgID0gcmVxdWlyZShcIi4vUi5TdG9yZVwiKShSKTtcclxuUi5TdHlsZSAgICAgICAgICAgICAgICAgPSByZXF1aXJlKFwiLi9SLlN0eWxlXCIpKFIpO1xyXG5SLlN0eWxlc2hlZXQgICAgICAgICAgICA9IHJlcXVpcmUoXCIuL1IuU3R5bGVzaGVldFwiKShSKTtcclxuUi5VcGxpbmsgICAgICAgICAgICAgICAgPSByZXF1aXJlKFwiLi9SLlVwbGlua1wiKShSKTtcclxuXHJcbi8vIFBsdWdpbnNcclxuUi5Db3Jkb3ZhICAgICAgICAgICAgICAgPSByZXF1aXJlKFwiLi9SLkNvcmRvdmFcIikoUik7XHJcblIuRnVsbHNjcmVlbiAgICAgICAgICAgID0gcmVxdWlyZShcIi4vUi5GdWxsc2NyZWVuXCIpKFIpO1xyXG5SLkhpc3RvcnkgICAgICAgICAgICAgICA9IHJlcXVpcmUoXCIuL1IuSGlzdG9yeVwiKShSKTtcclxuUi5Mb2NhbGl6ZSAgICAgICAgICAgICAgPSByZXF1aXJlKFwiLi9SLkxvY2FsaXplXCIpKFIpO1xyXG5SLldpbmRvdyAgICAgICAgICAgICAgICA9IHJlcXVpcmUoXCIuL1IuV2luZG93XCIpKFIpO1xyXG5SLlhXaW5kb3cgICAgICAgICAgICAgICA9IHJlcXVpcmUoXCIuL1IuWFdpbmRvd1wiKShSKTtcclxuXHJcbi8vIENvcmUgbWl4aW5zXHJcblIuUm9vdCAgICAgICAgICAgICAgICAgID0gcmVxdWlyZShcIi4vUi5Sb290XCIpKFIpO1xyXG5SLkNvbXBvbmVudCAgICAgICAgICAgICA9IHJlcXVpcmUoXCIuL1IuQ29tcG9uZW50XCIpKFIpO1xyXG5cclxuLy8gQ29yZSB3cmFwcGVyXHJcblIuUmVuZGVyU2VydmVyICAgICAgICAgID0gcmVxdWlyZShcIi4vUi5SZW5kZXJTZXJ2ZXJcIikoUik7XHJcblIuU2ltcGxlVXBsaW5rU2VydmVyICAgID0gcmVxdWlyZShcIi4vUi5TaW1wbGVVcGxpbmtTZXJ2ZXJcIikoUik7XHJcblxyXG5SLkRlYnVnLnNldE1vZGUocHJvY2Vzcy5lbnYuTk9ERV9FTlYgfHwgXCJkZXZlbG9wbWVudFwiKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gUjtcclxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9